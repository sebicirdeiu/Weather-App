(()=>{"use strict";const e=new Map;function t(t,r){t.forEach((t=>{e.set(t,r)}))}t([0,1],"day"),t([2],"cloudy-day-1"),t([3],"cloudy-day-2"),t([45,48],"cloudy-day-3"),t([51,53],"rainy-1"),t([55,56,57],"rainy-2"),t([61,63],"rainy-3"),t([65],"rainy-4"),t([66,67],"rainy-6"),t([71,73,75,77,80,85,86],"snowy-3"),t([95,96,99],"thunder");const r=new Map;function n(e,t){e.forEach((e=>{r.set(e,t)}))}function a(e,t,{parent:r=document}={}){r.querySelector(`[data-${e}]`).textContent=t}function o(t){return`./assets/animated/${e.get(t)}.svg`}n([0,1],"Perfect de o limonadă în centru!"),n([2],"Mult soare, câte un nor rătăcit pe alocuri..."),n([3],"Soare cu nori, măcar nu plouă :)"),n([45,48],"Înnorat că la englezi..."),n([51,53],"Câțiva stropi de ploaie,  nu e bai :)"),n([55,56,57],"Ia și umbrela cu tine..."),n([61,63],"Nu uita umbrela!"),n([65],"Ploaie abundentă, ia un taxi!"),n([66,67],"Furtună, nu ieși din casă!"),n([71,73,75,77,80,85,86],"Hai afară la zăpadă! :)"),n([95,96,99],"Tunete, fulgere și povești de groază..."),async function(){try{const e=await fetch("https://api.open-meteo.com/v1/forecast?latitude=45.65&longitude=25.61&hourly=temperature_2m,apparent_temperature,precipitation,weathercode,windspeed_10m&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum&current_weather=true&timeformat=unixtime&timezone=auto");let t=await e.json();console.log(t);const r=function({current_weather:e,daily:t}){const{timestemp:r,temperature:n,windspeed:a,weathercode:o}=e,{temperature_2m_max:[i],temperature_2m_min:[c],apparent_temperature_max:[u],precipitation_sum:[m]}=t;return{time:r,currentTemp:Math.round(n),highTemp:Math.round(i),lowTemp:Math.round(c),flTemp:Math.round(u),windSpeed:Math.round(a),precip:Math.round(m),iconCode:o}}(t);return{current:r,daily:function({daily:e}){return e.time.map(((t,r)=>({timestamp:1e3*t,iconCode:e.weathercode[r],maxTemp:Math.round(e.temperature_2m_max[r])})))}(t),hourly:function({hourly:e,current_weather:t}){return e.time.map(((t,r)=>({timestamp:1e3*t,iconCode:e.weathercode[r],temp:Math.round(e.temperature_2m[r]),feelsLike:Math.round(e.apparent_temperature[r]),windSpeed:Math.round(e.windspeed_10m[r]),precip:Math.round(100*e.precipitation[r])/100}))).filter((({timestamp:e})=>e>=1e3*t.time))}(t)}}catch(e){console.error(e)}}().then((function({current:e,daily:t,hourly:n}){(function(e){var t;document.querySelector("#main").src=o(e.iconCode),document.querySelector(".message").textContent=(t=e.iconCode,r.get(t)),a("current-temp",e.currentTemp),a("current-high",e.highTemp),a("current-min",e.lowTemp),a("current-feel",e.flTemp),a("current-wind",e.windSpeed),a("current-precip",e.precip),a("current-date",c.format(e.timestamp))})(e),m(t);const p=document.querySelector(".hour-section"),d=document.querySelector("[data-day-section]");document.querySelector(".zile").addEventListener("click",(()=>{m(t),p.style.display="none",d.style.display="flex"})),document.querySelector(".ore").addEventListener("click",(()=>{!function(e){const t=document.querySelector("[data-hour-section]"),r=document.getElementById("hour-row-template");t.innerHTML="",e.forEach(((e,n)=>{if(n<24){n++;const c=r.content.cloneNode(!0);a("temp",e.temp,{parent:c}),a("fl-temp",e.feelsLike,{parent:c}),a("wind",e.windSpeed,{parent:c}),a("precip",e.precip,{parent:c}),a("day",i.format(e.timestamp),{parent:c}),a("time",u.format(e.timestamp),{parent:c}),c.querySelector("[data-icon]").src=o(e.iconCode),t.append(c)}}))}(n),d.style.display="none",p.style.display="table"}))})).catch((e=>{console.error(e)}));const i=new Intl.DateTimeFormat(["ro-RO"],{weekday:"long"}),c=new Intl.DateTimeFormat(["ro-RO"],{weekday:"long",day:"numeric",month:"2-digit",year:"numeric"}),u=new Intl.DateTimeFormat(void 0,{hour:"numeric"});function m(e){const t=document.querySelector("[data-day-section]"),r=document.getElementById("day-card-template");t.innerHTML="",e.forEach((e=>{const n=r.content.cloneNode(!0);a("temp",e.maxTemp,{parent:n}),a("date",i.format(e.timestamp),{parent:n}),n.querySelector("[data-icon]").src=o(e.iconCode),t.append(n)}))}})();